mtcars %>% filter(cyl ==8) %>% filter(drat<=3.5)
mtcars %>% filter(cyl==8) %>% arrange(hp)
mtcars %>% filter(cyl==8) %>% arrange(desc(hp)
mtcars %>% filter(cyl==8) %>% arrange(desc(hp)
mtcars %>% filter(cyl==8) %>% arrange(desc(hp))
mtcars %>% mutate(car=rownames(mtcars))
iris %>% mutate (species = rownames(iris))
mtcars %>% mutate(car=rownames(mtcars))
mtcars %>% mutate(car=rownames(mtcars)) %>% select(car,mpg,cyl,hp,drat,wt,qsec,vs,am,gear,carb) _>new_mtcars
mtcars %>% mutate(car=rownames(mtcars)) %>% select(car,mpg,cyl,hp,drat,wt,qsec,vs,am,gear,carb) ->new_mtcars
head(iris)
iris %>% select(contains("Petal"))
iris %>% select(-contains("Petal"))
iris %>% select(ends_with("Width"))
View(new_mtcars)
new_mtcars%>% filter(cyl==4, hp==max(hp))
new_mtcars%>% filter(cyl==4)
new_mtcars%>% filter(cyl==4) %>% filter(hp==max(hp))
filter (new_mtcars, cyl==4, hp==max(hp))
filter (new_mtcars, cyl==4 %>% hp==max(hp))
filter (new_mtcars, cyl==4) %>% hp==max(hp))
new_mtcars%>% filter(cyl==4) %>% filter(hp==max(hp))
filter (new_mtcars, cyl==4) %>% hp==max(hp)
filter (new_mtcars, cyl==4) %>% (hp==max(hp))
new_mtcars%>% filter(cyl==4,hp==max(hp))
new_mtcars%>% filter(cyl==4 %>% hp==max(hp))
new_mtcars%>% filter(cyl==4 %>% hp==max(hp))
new_mtcars%>% distinct(cyl)
new_mtcars %>% arrange(desc(hp)) %>% distinct(cyl)
iris %>% groub_by(Species)
iris %>% group_by(Species)
iris %>% group_by(Species)%>%summarise(Mean=mean(Petal.Length), Sd = sd(Petal.Length, Count = n()))
iris %>% group_by(Species)%>%summarise(Mean=mean(Petal.Length), Sd = sd(Petal.Length, Count = n())
iris %>% group_by(Species)%>%summarise(Mean=mean(Petal.Length), Sd = sd(Petal.Length, Count = n()
iris %>% group_by(Species)%>%summarise(Mean=mean(Petal.Length), Sd = sd(Petal.Length), Count = n())
iris %>% group_by(Species)%>%summarise(Mean=mean(Petal.Length), Sd = sd(Petal.Length), Count = n())->iris_summary
View(iris_summary)
install.package(ggplot2)
install.packages(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(iris_summary, aes(x=Species, y=Mean)) + geom_bar(stat="identity")+geom_errorbar(aes(ymin=Mean-Sd, ymax= Mean+Sd), width = 0.4)+labs(y="Mean Petal Length")
getwd()
Sensilla <- read.csv(file.choose(), header=T)
## view data
library("dplyr") ->dplyr
Sensilla %>% arrange(HV)
## scatter plot
plot(D~HV,data=Sensilla,pch=16, xlab ="Head Volume", ylab ="Sensilla Density")
## linear regression
library("robustbase")
model = lm(D~HV, data=Sensilla)
summary(model)
## plot linear regression
int =  model$coefficient["(Intercept)"]
slope = model$coefficient["HV"]
plot(D~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Density")
abline(int,slope,lty=1, lwd=2, col="blue")
Sensilla <- read.csv(file.choose(), header=T)
## view data
library("dplyr") ->dplyr
Sensilla %>% arrange(HV)
## scatter plot
plot(D~HV,data=Sensilla,pch=16, xlab ="Head Volume", ylab ="Sensilla Density")
## linear regression
library("robustbase")
model = lm(D~HV, data=Sensilla)
summary(model)
## plot linear regression
int =  model$coefficient["(Intercept)"]
slope = model$coefficient["HV"]
plot(D~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Density")
abline(int,slope,lty=1, lwd=2, col="blue")
Sensilla <- read.csv(file.choose(), header=T)
Sensilla <- read.csv(file.choose(), header=T)
Sensilla <- read.csv(file.choose(), header=T)
Sensilla <- read.csv(file.choose(), header=T)
plot(D~HV,data=Sensilla,pch=16, xlab ="Head Volume", ylab ="Sensilla Density")
## linear regression
library("robustbase")
model = lm(D~HV, data=Sensilla)
summary(model)
## plot linear regression
int =  model$coefficient["(Intercept)"]
slope = model$coefficient["HV"]
plot(D~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Density")
abline(int,slope,lty=1, lwd=2, col="blue")
plot(AP~HV,data=Sensilla,pch=16, xlab ="Head Volume", ylab ="Area of post-oculars")
model2 = lm(AP~HV, data=Sensilla)
summary(model2)
int =  model$coefficient["(Intercept)"]
slope = model$coefficient["HV"]
plot(AP~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Area of post-oculars")
abline(int,slope,lty=1, lwd=2, col="blue")
int =  model2$coefficient["(Intercept)"]
slope = model2$coefficient["HV"]
plot(AP~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Area of post-oculars")
abline(int,slope,lty=1, lwd=2, col="blue")
model = lm(N~HV, data=Sensilla)
summary(model3)
int =  model3$coefficient["(Intercept)"]
slope = model3$coefficient["HV"]
plot(N~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Number")
abline(int,slope,lty=1, lwd=2, col="blue")
model = lm(N~HV, data=Sensilla)
model3 = lm(N~HV, data=Sensilla)
summary(model3)
plot(N~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Number")
> abline(int,slope,lty=1, lwd=2, col="blue")
> int =  model3$coefficient["(Intercept)"] slope = model3$coefficient["HV"]plot(N~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Number")abline(int,slope,lty=1, lwd=2, col="blue")
int =  model3$coefficient["(Intercept)"]
slope = model3$coefficient["HV"]
plot(N~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Number")
abline(int,slope,lty=1, lwd=2, col="blue")
model = lm(D~HV, data=Sensilla)
summary(model)
int =  model3$coefficient["(Intercept)"]
slope = model3$coefficient["HV"]
plot(N~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Sensilla Number")
abline(int,slope,lty=1, lwd=2, col="blue")
model4 = lm(AM~HV, data=Sensilla)
summary(model4)
int =  model4$coefficient["(Intercept)"]
slope = model4$coefficient["HV"]
plot(AM~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Mean Area of a Sensilla")
abline(int,slope,lty=1, lwd=2, col="blue")
model5 = lm(AD~HV, data=Sensilla)
summary(model5)
int =  model5$coefficient["(Intercept)"]
slope = model5$coefficient["HV"]
plot(AD~HV, data = Sensilla, pch=16, xlab="Head Volume", ylab="Relative area of sensilla")
abline(int,slope,lty=1, lwd=2, col="blue")
Areapo = lm(AP~HV, data=Sensilla)
newdata = data.frame(HV=80)
predict(Areapo, newdata, interval='confidence')
Areapo = lm(AP~HV, data=Sensilla)
summar(Areapo)
summary(Areapo)
confint(Sensilla, 'HV', level=0.95)
confint(Sensilla, 'HV', level=0.95) 2.5% 97.5%
confint(Areapo, 'HV', level=0.95) 2.5% 97.5%
confint(Areapo, 'HV', level=0.95)
confin(model, 'HV', level=0.95) -> 95CL
confin(model, 'HV', level=0.95) -> CL
confint(model, 'HV', level=0.95) -> CL
View(CL)
View(CL)
confint(model, 'HV', level=0.95)
summary(model)
confint(model, 'HV', level=0.95)
summary(model2)
summary(model3)
confint(model3, 'HV', level=0.95)
summary(model4)
confint(model4, 'HV', level=0.95)
summary(model5)
confint(model5, 'HV', level=0.95)
(a-b)/2 -> CI
View(CL)
0.2790555 - -0.2155695
(0.2790555 - -0.2155695)/2
confint(model2, 'HV', level=0.95)
library(lmodel2)
RMA_N <-lmodel2(N~HV, data=Sensilla.csv,nperm=99)
RMA_N <-lmodel2(N~HV, data=Sensilla,nperm=99)
??lmodel2
RMA_N <-lmodel2(N~HV, data=Sensilla,range.y="interval", range.x= "interval", nperm=99)
regression.results(RMA_N)
summary(RMA_N)
plot(RMA_N, main="RMA Number of Sensilla", xlab="Head volume", ylab="Sensilla number")
plot(RMA_N, main="RMA Number of Sensilla", pch=16, xlab="Head volume", ylab="Sensilla number")
View(RMA_N)
summary(RMA_N)
View(newdata)
summary(RMA_N)
regression.results(RMA_N)
regression.results
RMA_N <- regression.results
RMA_N
RMA_D <-lmodel2(D~HV, data=Sensilla,range.y="interval", range.x= "interval", nperm=99)
RMA_D
plot(RMA_D, main="RMA Sensilla density", pch=16, xlab="Head volume", ylab="Sensilla density")
RMA_AP <-lmodel2(AP~HV, data=Sensilla,range.y="interval", range.x= "interval", nperm=99)
RMA_AP
plot(RMA_AP, main="RMA Area of post-oculars", pch=16, xlab="Head volume", ylab="Post-ocular area")
RMA_AM <-lmodel2(AM~HV, data=Sensilla,range.y="interval", range.x= "interval", nperm=99)
RMA_AM
plot(RMA_AM, main="RMA Mean sensilla area", pch=16, xlab="Head volume", ylab="Mean sensilla area")
RMA_AD <-lmodel2(AD~HV, data=Sensilla,range.y="interval", range.x= "interval", nperm=99)
RMA_AD
plot(RMA_AD, main="RMA Relative area", pch=16, xlab="Head volume", ylab="Relative area of sensilla")
RMA_AM_test <-lmodel2(AM~HV, data=Sensilla, nperm=99)
RMA_AM_test
Sensilla <- read.csv(file.choose(), header=T)
RMA_N <-lmodel2(N~HV, data=Sensilla, nperm=99)
RMA_N
RMA_D <-lmodel2(D~HV, data=Sensilla, nperm=99)
RMA_D
RMA_AP <-lmodel2(AP~HV, data=Sensilla, nperm=99)
RMA_AM <-lmodel2(AM~HV, data=Sensilla, nperm=99)
RMA_AD <-lmodel2(AD~HV, data=Sensilla, nperm=99)
RMA_D <-lmodel2(D~HV, data=Sensilla, nperm=99)
RMA_AP
RMA_AM
RMA_AD
RMA_N <-lmodel2(N~HV, data=Sensilla)
RMA_N
library(ggplot2)
scatterN <- ggplot() + geom_point(aes(x=HV), y=N), data=Sensilla) +labs(title="Sensilla Number"~"Head Volume")+ theme_bw(25)
scatterN <- ggplot(aes(HV, N), data=Sensilla)+ geom_point()+labs(title="Sensilla Number"~"Head Volume")+ theme_bw(25)
test <-ggplot(Sensilla, aes(HV,N))
test <-ggplot(Sensilla, aes(HV,N)) p+geom_point()
test <-ggplot(Sensilla, aes(HV,N))
test + geom_point()
test2 <-ggplot(Sensilla, aes(HV,D))
test2+geom_point()
test2+geom_point(aes(colour = factor(Species)))
Sensilla <- read.csv(file.choose(), header=T)
scatterD <-ggplot(SensillaHab, aes(HV,D)), scatterD+geom_point(aes(colour = actor(Habitat)))
scatterD <-ggplot(SensillaHab, aes(HV,D)) scatterD+geom_point(aes(colour = actor(Habitat)))
scatterD <-ggplot(SensillaHab, aes(HV,D)) + scatterD+geom_point(aes(colour = actor(Habitat)))
SensillaHab
View(Sensilla)
scatterD <-ggplot(Sensilla, aes(HV,D)) + scatterD+geom_point(aes(colour = actor(Habitat)))
scatterD <-ggplot(Sensilla, aes(HV,D))
scatter +geom_point(aes(colour = factor(Habitat)))
scatterD +geom_point(aes(colour = factor(Habitat)))
scatterD +geom_point(aes(colour = factor(Habitat)), size=4 +geom_point(colour="grey90", size=1.5))
scatterD <-ggplot(Sensilla, aes(HV,D))+geom_point(Sensilla, aes(HV,D))+ labs(title="Sensilla Density over Head Volume")
scatterD <-ggplot(Sensilla, aes(HV,D))+geom_point(scatterD, aes(HV,D))+ labs(title="Sensilla Density over Head Volume")
scatterD +geom_point(aes(colour = factor(Habitat)))
scatterD +geom_point()+labs(title="Sensilla Density")+ theme_bw(25)
OLS_model <-1m(D~HV, data=Sensilla)
OLS_model <-lm(D~HV, data=Sensilla)
summary(OLS_model)
RMA_model <-lmodel2(D~HV, data=Sensilla)
summary(RMA_model)
reg_lines <-data.frame(slopes = c(RMA_model$regression.results[3,3],coef(OLS_model)[2]), intercepts = c(RMA_model$regression.results[3,2], coef(OLS_model)[1]), method=c("RMA", "OLS"))
scatter +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)+annotate(geom="test", x= 3.5, y=c(2,1.8), label=c("RMA line", "OLS line", color=c("green","red"))
)
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)+annotate(geom="test", x= 3.5, y=c(2,1.8), label=c("RMA line", "OLS line", color=c("green","red"))
)
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)+annotate(geom="test", x= 4.0, y=c(1.5,1), label=c("RMA line", "OLS line", color=c("green","red")))
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines))
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines) +annotate(geom="text", x= 3.0, y=c(1.5,2), label=c("RMA line", "OLS line", color=c("green","red")))
scatterD +geom_abline(aes(slope=slopes, intercept=intercepts, linetype=method, color=method), data=reg_lines)
scatterD
scatter +geom_point(aes(colour = factor(Habitat)))
scatterD +geom_point()+labs(title="Sensilla Density")+ theme_bw(25)
scatter D + stat_smooth(method="lm", se=FALSE)
scatterD + stat_smooth(method="lm", se=FALSE)
scatterD +geom_point()+labs(title="Sensilla Density")+ theme_bw(25)+stat_smooth(method="lm", se=FALSE)
scatterD +geom_point()+labs(title="Sensilla Density")+ theme_bw(25)+stat_smooth(method="lm", se=FALSE) +stat_smooth(melod="lmodel2, se=F")
scatterD +geom_point()+labs(title="Sensilla Density")+ theme_bw(25)+stat_smooth(method="lm", se=FALSE) +stat_smooth(melod="lmodel2", se=F)
RStudio.Version()
library(‘dplyr’)
library('dplyr')
library('ggplot2’)
library('robustbase')
library('ggplot2')
Regressions <- read.csv(file.choose(), header=T)#load data
Density <-ggplot(Regressions, aes(HV,D,col=Habitat))
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") #labels x axis +
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Number <-ggplot(Regressions, aes(HV,N,col=Habitat))
Number + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") #labels x axis +
ylab("Number of Sensilla") + #labels y axis
ggtitle("Number of sensilla over head volume") #labels graph
xlab("Head Volume")+ #labels x axis +
ylab("Number of Sensilla") + #labels y axis
ggtitle("Number of sensilla over head volume") #labels graph
Number + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis +
ylab("Number of Sensilla") + #labels y axis
ggtitle("Number of sensilla over head volume") #labels graph
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") #labels x axis +
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Size <-ggplot(Regressions, aes(HV,N,col=Habitat))
Size + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Mean sensillum size of Sensilla") + #labels y axis
ggtitle("Mean sensillum size over head volume") #labels graph
Coverage <-ggplot(Regressions, aes(HV,N,col=Habitat))
Coverage + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Coverage of Sensilla") + #labels y axis
ggtitle("Coverage of Sensilla over head volume") #labels graph
Regressions
#Size ~ Head volume
Size <-ggplot(Regressions, aes(HV,AM,col=Habitat))
Size + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Mean sensillum size") + #labels y axis
ggtitle("Mean sensillum size over head volume") #labels graph
#Coverage ~ Head volume
Coverage <-ggplot(Regressions, aes(HV,AD,col=Habitat))
Coverage + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Coverage of Sensilla") + #labels y axis
ggtitle("Coverage of Sensill over head volume") #labels graph
Regressions
Regressions %>% arrange(Habitat)
Regressions %>% order(terrestrial)
Regressions %>% order(terrestrial)
Regressions %>% arrange(terrestrial)
Regressions %>% arrange(Habitat(terrestrial)
)
Regressions %>% arrange(Habitat)
Sorted <-Regressions[order(-Habitat),]
Regressions
sort(Habitat)
Regressions %>% sort(Habitat)
Regressions %>% arrange(-Habitat)
sort(Regressions,decreasing=T)
Regressions %>% sort(Habitat, decreasing=T)
Regressions %>% sort(Habitat)
Regressions %>% order(Habitat)
Regressions %>% arrange(Habitat)
Regressions %>% arrange(-Habitat)
Regressions %>% arrange(Habitat,decreasing=T)
Regressions <- read.csv(file.choose(), header=T)#load data
Regressions2 <- read.csv(file.choose(), header=T)#load data
#Density ~ Head volume
Density <-ggplot(Regressions, aes(HV,D,col=Habitat))
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density <-ggplot(Regressions, aes(HV,D,col=Habitat))
Density + geom_point(col=) +#create plot for numerical density ~ head volume, coloured by Habitat
sclae_colrour_manual(name="", values=c("blue", "green", "red")) +
Density + geom_point(col=) +#create plot for numerical density ~ head volume, coloured by Habitat
sclae_colrour_manual(name="", values=c("blue", "green", "red")) +
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point(col=) +#create plot for numerical density ~ head volume, coloured by Habitat
sclae_colour_manual(name="t", values=c("blue", "green", "red"))
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point(col=) +#create plot for numerical density ~ head volume, coloured by Habitat
sclae_colour_manual(name="t", values=c("blue", "green", "red")) +
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point(col=) +#create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(name="", values=c("blue", "green", "red"))
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(name="", values=c("blue", "green", "red"))
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(name="", values=c("blue", "green", "red")) +
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(name="", values=c("blue", "green", "red")) + scale_fill_hue(c=45, l=80) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(name="", values=c("blue", "green", "red"))+ geom_bar(stat="identity") + scale_fill_hue(c=45, l=80) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Density + geom_point() + #create plot for numerical density ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F) + #add regression lines
xlab("Head Volume") + #labels x axis
ylab("Numerical Density of Sensilla") + #labels y axis
ggtitle("Numerical density over head volume") #labels graph
Number + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Number of Sensilla") + #labels y axis
ggtitle("Number of sensilla over head volume") #labels graph
Size + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Mean sensillum size") + #labels y axis
ggtitle("Mean sensillum size over head volume") #labels graph
Coverage + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Head Volume")+ #labels x axis
ylab("Coverage of Sensilla") + #labels y axis
ggtitle("Coverage of Sensill over head volume") #labels graph
Aquaticspp <- read.csv(file.choose(), header=T)
modelAquaticspp <-lm(D~HV +N, data= Aquaticspp) #linear model
modelAquaticspp <-lm(AD~HV +N, data= Aquaticspp) #linear model
summary(modelAquaticspp) #display results
confint(model, 'HV', level=0.95) # display 95% confidence intervals
AquaticOLS <-lm(AD~HV, data= Aquaticspp) #OLS of coverage ~ head volume
summary(modelAquaticspp) #display results
confint(model, 'HV', level=0.95) # display 95% confidence intervals
summary(AquaticOLS) + #display results
confint(AquaticOLS) 'HV', level=0.95) # display 95% confidence intervals
summary(AquaticOLS) #display OLS results
confint(AquaticOLS) 'HV', level=0.95) # display 95% confidence intervals
confint(AquaticOLS, 'HV', level=0.95) # display 95% confidence intervals
confint(AquaticOLS, 'AD', level=0.95) # display 95% confidence intervals
SizeDen <-ggplot(Regressions, aes(D,AM,col=Habitat))
SizeDen + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Numerical-density of sensilla")+ #labels x axis
ylab("Mean sensillum size") + #labels y axis
ggtitle("mean size over numerical-density") #labels graph
SizeDen2 <-ggplot(Regressions, aes(D,AM))
SizeDen2 + geom_point() +
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Numerical-density of sensilla")+ #labels x axis
ylab("Mean sensillum size") + #labels y axis
ggtitle("mean size over numerical-density") #labels graph
#size ~ density
SizeDen <-ggplot(Regressions, aes(D,AM,col=Habitat))
SizeDen + geom_point() + #create plot for numerical n ~ head volume, coloured by Habitat
scale_colour_manual(values=c("blue", "green", "red")) + # specify colour for each Habitat type
geom_smooth(method=lm,se=F)+ #add regression lines
xlab("Numerical-density of sensilla")+ #labels x axis
ylab("Mean sensillum size") + #labels y axis
ggtitle("mean size over numerical-density") #labels graph
getwd()
setwd("/Users/jennacrowe-riddell/Documents/tissue_profiling/salmon_quant/tpm_results")
dgePMucros <- read.table(file = "PMucros_quant_tpm_all.tsv",
header = TRUE)
names(dgePMucros)
tissuenames <- c("HMAJ_testis",
"HMAJ_heart",
"ALA_vno",
"ALA_tailA2",
"ATEN_tailA2",
"ATEN_tailB5",
"ATEN_body",
"ALA_eye",
"BRH_vno",
"ALAjuv_body",
"ALAjuv_tailA2",
"ALAjuv_tailB5",
"NSC_vno")
Names <- c("Name", "HMAJ_testis",
"HMAJ_heart",
"ALA_vno",
"ALA_tailA2",
"ATEN_tailA2",
"ATEN_tailB5",
"ATEN_body",
"ALA_eye",
"BRH_vno",
"ALAjuv_body",
"ALAjuv_tailA2",
"ALAjuv_tailB5",
"NSC_vno")
rm(tissuenames)
?sub
library(magrittr)
library(tibble)
library(readr)
library(dplyr)
library(ggplot2)
library(edgeR)
library(RColorBrewer)
library(tidyverse)
library(pheatmap)
install.packages("pheatmap")
?rename_at
colnames(dgePMucros)
colnames(dgePMucros) <- add_colnames(Names)
colnames(dgePMucros) <- dgePMucros %>% set_colnames(c("Name", "HMAJ_testis","HMAJ_heart",
"ALA_vno", "ALA_tailA2", "ATEN_tailA2",
"ATEN_tailB5", "ATEN_body", "ALA_eye", "BRH_vno",
"ALAjuv_body", "ALAjuv_tailA2", "ALAjuv_tailB5", "NSC_vno"))
names(dgePMucros)
dgePMucros <- read.table(file = "PMucros_quant_tpm_all.tsv",
header = TRUE)
?rename
names(dgePMucros)
"ALAjuv_body", "ALAjuv_tailA2", "ALAjuv_tailB5", "NSC_vno"))
rename(names(dgePMucros) = c("Name", "HMAJ_testis","HMAJ_heart","ALA_vno", "ALA_tailA2", "ATEN_tailA2", "ATEN_tailB5", "ATEN_body", "ALA_eye", "BRH_vno", "ALAjuv_body", "ALAjuv_tailA2", "ALAjuv_tailB5", "NSC_vno"))
rename(names(dgePMucros), c("Name", "HMAJ_testis","HMAJ_heart","ALA_vno", "ALA_tailA2", "ATEN_tailA2", "ATEN_tailB5", "ATEN_body", "ALA_eye", "BRH_vno", "ALAjuv_body", "ALAjuv_tailA2", "ALAjuv_tailB5", "NSC_vno"))
select(names(dgePMucros), c("Name", "HMAJ_testis","HMAJ_heart","ALA_vno", "ALA_tailA2", "ATEN_tailA2", "ATEN_tailB5", "ATEN_body", "ALA_eye", "BRH_vno", "ALAjuv_body", "ALAjuv_tailA2", "ALAjuv_tailB5", "NSC_vno"))
