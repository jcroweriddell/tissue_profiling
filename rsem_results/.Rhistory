pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
geneNames <- geneList
geneNames <- sub("L345_06817", "SWS1", geneNames)
geneNames <- sub("L345_18159", "SAG", geneNames)
geneNames <- sub("L345_00724", "RCVRN", geneNames)
geneNames <- sub("grk7-a", "GRK7-A", geneNames)
geneNames
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
View(visGenesFPKM)
visGeneslogFPKM
geneNames <- visGeneslogFPKM
geneNames <- sub("L345_06817", "SWS1", geneNames)
geneNames <- sub("L345_18159", "SAG", geneNames)
geneNames <- sub("L345_00724", "RCVRN", geneNames)
geneNames <- sub("grk7-a", "GRK7-A", geneNames)
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
geneNames
visGeneslogFPKM
visGeneslogFPKM %>% select(L345_06817 = SWS1)
visGeneslogFPKM <- visGenesFPKM %>%
column_to_rownames("GeneName") %>%
# select(ALA_tailA2, ALAjuv_tailB5, ALAjuv_tail, ALAjuv_body, ATEN_tail, ATEN_tailB5, ATEN_body,
# HMAJ_heart, HMAJ_testis, ALA_eye, ALA_vno, BRH_vno, NSC_vno) %>%# set order of the tissues
as.matrix() %>%
log1p()
visGeneslogFPKM
geneNames <- visGeneslogFPKM[1]
geneNames
geneNames <- visGenesFPKM[1]
geneNames
geneNames <- sub("L345_06817", "SWS1", geneNames)
geneNames <- sub("L345_18159", "SAG", geneNames)
geneNames <- sub("L345_00724", "RCVRN", geneNames)
geneNames <- sub("grk7-a", "GRK7-A", geneNames)
geneNames
geneNames <- visGenesFPKM[1]
geneNames %>% select(L345_06817 = SWS1)
geneNames %>% select(SWS1 = L345_06817)
geneNames
geneNames %>% select(SWS1 = L345_06817)
geneNames %>% select(RHO = L345_06817)
class(geneNames)
geneNames <- as.vector(visGenesFPKM[1])
class(geneNames)
geneNames <- visGenesFPKM[1]
?as.vector
geneNames %>% as.vector(geneNames, mode = "any")
as.vector(geneNames, mode = "any")
class(geneNames)
as.vector(geneNames, mode = "list")
class(geneNames)
geneNames <- sub("L345_06817", "SWS1", geneNames)
geneNames
geneNames <- sub("L345_18159", "SAG", geneNames)
geneNames <- sub("L345_00724", "RCVRN", geneNames)
geneNames <- sub("grk7-a", "GRK7-A", geneNames)
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
visGeneslogFPKM
visGenesFPKM
geneNames <- visGenesFPKM[1]
geneNam
geneNames
geneNames <- c("GUCY2D", "RDH8", "LRAT", "GNAT3", "GUCY2F", "ARRB2", "ARRB1", "RPE65", "RHO",
"OPN4", "DHRS9", "OPN3", "GNAT2", "OPN5", "GRK7-A", "OPN1SW", "RCVRN", "PDE6C", "PDE6B")
geneNames
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
tissueNames <- c("A.laevis tailA", "A.laevisJ tailB", "A.laevisJ tailA", "A.tenuis tailA",
"A.tenuis tailB", "A.tenuis body", "H.major heart", "H.major testis", "A.laevis eye",
"A.laevis vno", "B.rhino vno", "N.scutatus vno")
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
library(edgeR)
install.packages("edgeR")
source("https://www.bioconductor.org/biocLite.R")
bioClite('edgeR')
biocLite('edgeR')
dge %<>% column_to_rownames("gene_id") %>%
as.matrix() %>%
edgeR::DGEList() %>%
calcNormFactors()
dge %<>% column_to_rownames("gene_id") %>%
as.matrix() %>%
edgeR::DGEList() %>%
edgeR::calcNormFactors()
plot(hclust( d = dist(t(cpm(dge)),  method = "euclidean"),
method = "ward.D"),
hang = -1, xlab = "Samples", sub = "Distance=euclidean; Method=ward.D")
plot(hclust( d = dist(t(edgeR::cpm(dge)),  method = "euclidean"),
method = "ward.D"),
hang = -1, xlab = "Samples", sub = "Distance=euclidean; Method=ward.D")
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"), hang = -1)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"), hang = -1, xlab = NA)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"), hang = -1, xlab = NA, sub = NA)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
sub = NA,
labels = FALSE)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE
main = FALSE)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE
main = NA)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 0.6)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 10)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 20)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 12)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8,
edgePar = list(col:2:3), lwd = 2  )
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8,
edgePar = list(lwd = 2  )
## Visualise RNA read data
x <- dge
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
## Removing lowly expressed genes
## Check how many genes counts = 0 for all samples, set cut-off cpm >`1`in >3 samples
table(rowSums(x$counts==0)==9)
keep.exprs <- rowSums(cpm>1)>=3
x <- x[keep.exprs,, keep.lib.sizes=FALSE]
dim(x)
## Compare pre/post filtering of lowly expressed gened
nsamples <- ncol(x)
col <- brewer.pal(nsamples, "Paired")
par(mfrow=c(1,2))
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.21), las=2,
main="", xlab="")
title(main="A. Raw data", xlab="Log-cpm")
abline(v=0, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", sample$gene_id, text.col=col, text.width=5, bty="n")
lcpm <- cpm(x, log=TRUE)
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.21), las=2,
main="", xlab="")
title(main="B. Filtered data", xlab="Log-cpm")
abline(v=0, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", sample$gene_id, text.col=col, text.width=5, bty="n")
# dev.off()
## Normalise by method of trimmed mean of M-values (TMM)
x <- calcNormFactors(x, method = "TMM")
x$samples$norm.factors
#####################################################################################
## DE gene analyses
## Determine expression level filter
names(dge)
read_counts_sample1 <- dge$counts[ ,"ALA_eye_count" ]
cpm_sample1 <- cpm(read_counts_sample1)
for(count in c(5:10)){
# find the CPM value of genes which have read counts between 5 and 10
unique_cpm_value <- unique( cpm_sample1[ which( read_counts_sample1 == count ), ] )
# print the CPM value rounded to 2 decimal places that corresponds to each count value between 5 and 10
print( paste( count, "reads => CPM", round( unique_cpm_value, 2) ) )
}
# Filter out very lowly expressed genes, keeping genes that are expressed at a reasonable level (CPM>1) in at least 4 of the 8 samples
dge_expressed <- dge[ rowSums(cpm(dge) > 1) >= 4, ]
dim(dge_expressed$counts)
# Re-compute the library sizes after filtering
dge_expressed$samples$lib.size <- colSums(dge_expressed$counts)
# Visualise the library sizes for each sample
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.6)
# Normalizing - Compute effective library sizes using the default TMM normalization:
dge_expressed <- calcNormFactors(dge_expressed, method="TMM")
dge_expressed$samples
### Defining the design matrix
# convert photoresponse information to factors
Photo <- as.factor(sampleinfo$experiment)
Photo
# create design matrix
design <- model.matrix(~ Photo)
design
# voom converts raw counts to logCPM values by automatically extracting library sizes and normalisation factors from x
#v <- voom(x, design, plot=TRUE)
#v
#
# vfit <- lmFit(v, design)
# vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
# efit <- eBayes(vfit)
# plotSA(efit, main = "Final model: Mean-variance trend")
# estimate a common negative binomial dispersion parameter for a DGE dataset with
# a general experimental design
dispersions <- estimateGLMCommonDisp(dge_expressed, design, verbose=TRUE)
# estimate the abundance-dispersion trend by Cox-Reid approximate profile likelihood
dispersions <- estimateGLMTrendedDisp(dispersions, design)
# implement the empirical Bayes strategy proposed by McCarthy et al (2012) for estimating the tagwise negative binomial dispersions
dispersions <- estimateGLMTagwiseDisp(dispersions, design)
# plot biological coefficient of variation, indicates biological variation between replicate samples
plotBCV(dispersions, main="BCV plot")
# fits genewise negative binomial GLMs for design
fit <- glmFit(dispersions, design)
### BVC >0.6 too high
#####################################################################################
## Gene annotation
## Heatmap
## Read data
FPKMresults <- read.delim("rsem_all_together.tsv")
names(FPKMresults) <- gsub("_FPKM","",names(FPKMresults))
geneNumToName <- read_delim("gene_number_to_name.tsv", delim = "\t", col_names = c("GeneID", "GeneName"))
# In this case we're using FPKM but can also use TPM
#TPMresults <- read.delim("rsem_TPM_all_together.tsv")
## Create table with FPKM and gene names
FPKMresults_gene <- FPKMresults %>%
full_join(geneNumToName, by = c("gene_id" = "GeneID")) %>%
select(GeneName, ALA_tailA2, ALAjuv_tailB5, ALAjuv_tailA2, ALAjuv_body, ATEN_tailA2, ATEN_tailB5, ATEN_body,
HMAJ_heart, HMAJ_testis, ALA_eye, ALA_vno, BRH_vno, NSC_vno)
## Create TPM
# TPMresults_gene <- TPMresults %>%
#   full_join(geneNumToName, by = c("gene_id" = "GeneID")) %>%
#   select(GeneName, ALA_eye = ALA_eye_TPM, ALA_vno = ALA_vno_TPM , ALA_tailA2 = ALA_tailA2_TPM,
#          ALAjuv_tail = ALAjuv_tailA2_TPM, ALAjuv_tailB5 = ALAjuv_tailB5_TPM,
#          ALAjuv_body = ALAjuv_body_TPM,ATEN_tail = ATEN_tailA2_TPM, ATEN_tailB5= ATEN_tailB5_TPM,
#          ATEN_body =  ATEN_body_TPM,NSC_vno = NSC_vno_TPM, BRH_vno = BRH_vno_TPM,
#          HMAJ_heart =HMAJ_heart_TPM, HMAJ_testis = HMAJ_testis_TPM)
# head(TPMresults_gene)
## Filter by individual gene names
#geneList <- read_tsv(file = "visualGenes.tsv", col_names = FALSE)
# turn into vector
#geneList <- geneList$X1
geneList <- c("GNAT1", "GNAT2", "GNAT3", "grk7-a", "GUCY2D",
"GUCY2F",  "CUCA1A", "LRAT", "PDE6B", "PDE6C", "RDH8", "RPE65",
"OPN3", "OPN4", "OPN5", "ROD1", "ABCA4", "ARRB2", "RHO",
"L345_06817", "L345_18159", "L345_00724",
"DHRS9")
visGenesFPKM <- filter(FPKMresults_gene, GeneName %in% geneList)
View(visGenesFPKM)
# visGenesTPM <- filter(TPMresults_gene, GeneName %in% geneList)
# View(visGenesTPM)
## Save file
write.table(visGenesFPKM, "visGenesFPKM.txt", sep="\t")
write.table(visGenesTPM, "visGenesFPKM.txt", sep="\t")
#####################################################################################
## Heatmap of FPKM (or TPM) for visual genes
# Turn into data matrix and log (R function log1p = log(1+x). used here because it accounts for those cells = 0)
visGeneslogFPKM <- visGenesFPKM %>%
column_to_rownames("GeneName") %>%
# select(ALA_tailA2, ALAjuv_tailB5, ALAjuv_tail, ALAjuv_body, ATEN_tail, ATEN_tailB5, ATEN_body,
# HMAJ_heart, HMAJ_testis, ALA_eye, ALA_vno, BRH_vno, NSC_vno) %>%# set order of the tissues
as.matrix() %>%
log1p()
visGeneslogFPKM
# remove "L" genes and replace with likely protein name
geneNames <- c("GUCY2D", "RDH8", "LRAT", "GNAT3", "GUCY2F", "ARRB2", "ARRB1", "RPE65", "RHO",
"OPN4", "DHRS9", "OPN3", "GNAT2", "OPN5", "GRK7-A", "OPN1SW", "RCVRN", "PDE6C", "PDE6B")
geneNames
colfunc <- brewer.pal(n = 9, name = "OrRd")
tissueNames <- c("A.laevis tailA", "A.laevisJ tailB", "A.laevisJ tailA", "A.tenuis tailA",
"A.tenuis tailB", "A.tenuis body", "H.major heart", "H.major testis", "A.laevis eye",
"A.laevis vno", "B.rhino vno", "N.scutatus vno")
pheatmap(visGeneslogFPKM,
cluster_rows = FALSE,
cluster_cols = FALSE,
border_color = NA,
color = colfunc,
labels_col = tissueNames,
labels_row = geneNames)
#colfunc <-colorRampPalette(bias = 1, c("white", "springgreen", "yellow","orange", "red"))
# pheatmap(visGeneslogFPKM, cluster_rows = FALSE, cluster_cols = FALSE, color = colfunc)
# visGeneslogTPM <- visGenesTPM %>%
#   column_to_rownames("GeneName") %>%
#   as.matrix() %>%
#   log1p()
dev.off()
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8,
edgePar = list(lwd = 2))
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8,
edge.width = 2)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8,
edge.width = 2)
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8)
plot(hclust( d = dist(t(edgeR::cpm(dge)),  method = "euclidean"),
method = "ward.D"),
hang = -1, xlab = "Samples", sub = "Distance=euclidean; Method=ward.D")
plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8)
simpleDen <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 8)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 15)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 25)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 20)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 14)
simpleClust <- plot(hclust(d = dist(t(edgeR::cpm(dge)),method = "euclidean"),
method = "ward.D"),
hang = -1,
xlab = NA,
ylab = NA,
sub = NA,
labels = FALSE,
axes = FALSE,
cex = 15)
