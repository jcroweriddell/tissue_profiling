install.packages("edgeR")
FPKMresults
FPKMresults <- read.delim("rsem_all_together.tsv")
setwd("C:/Users/L033060262053/Documents/Research projects/Tail_photoreception/tissue_profiling/rsem_results/")
FPKMresults <- read.delim("rsem_all_together.tsv")
FPKMresults <- arrange(FPKMresults, desc(ALA_eye_FPKM))
FPKMtopEye <- FPKMresults %>% filter(ALA_eye_FPKM >5000)
library(dplyr)
FPKMresults <- arrange(FPKMresults, desc(ALA_eye_FPKM))
FPKMtopEye <- FPKMresults %>% filter(ALA_eye_FPKM >5000)
ALA_FPKM <-select(FPKMresults, gene_id, ALA_eye_FPKM, ALAjuv_tailA2_FPKM, ALAjuv_tailB5_FPKM, ALAjuv_body_FPKM, ALA_vno_FPKM, ALA_tailA2_FPKM) %>%
arrange(desc(ALA_eye_FPKM))
ALA_topEye <- ALA_FPKM %>% filter(ALA_eye_FPKM >1000)
library(ggplot2)
library("RColorBrewer")
rnames <- FPKMtopEye[,1] #assign Labels from column 1 to 'rnames'
mat_data <- data.matrix(FPKMtopEye[,2:14(FPKMtopEye)]) #tranform columns 2-14 in to matrix
FPKMresults <- read.delim("rsem_all_together.tsv")
head(FPKMresults)
FPKMresults <- arrange(FPKMresults, desc(ALA_eye_FPKM))
head(FPKMresults)
FPKMtopEye <- FPKMresults %>% filter(ALA_eye_FPKM >5000)
dim(FPKMtopEye)
head(FPKMtopEye)
ALA_FPKM <-select(FPKMresults, gene_id, ALA_eye_FPKM, ALAjuv_tailA2_FPKM, ALAjuv_tailB5_FPKM, ALAjuv_body_FPKM, ALA_vno_FPKM, ALA_tailA2_FPKM) %>%
arrange(desc(ALA_eye_FPKM))
head(ALA_FPKM)
ALA_topEye <- ALA_FPKM %>% filter(ALA_eye_FPKM >1000)
dim(ALA_topEye)
dim(ALA_FPKM)
rnames <- FPKMtopEye[,1] #assign Labels from column 1 to 'rnames'
mat_data <- data.matrix(FPKMtopEye[,2:14(FPKMtopEye)]) #tranform columns 2-14 in to matrix
rownames(mat_data) <- rnames # assign rownames
library(gplots)
dge <- read.table(file = "rsem_expectedCount_all_together_names.tsv",
header = TRUE)
sample <- read_csv(file = "sample_info_tissues.csv", col_names = TRUE)
library(magrittr)
library(tibble)
library(readr)
library(dplyr)
library(ggplot2)
library(edgeR)
sample <- read_csv(file = "sample_info_tissues.csv", col_names = TRUE)
dge %<>% column_to_rownames("gene_id") %>%
as.matrix() %>%
edgeR::DGEList() %>%
calcNormFactors()
rm(dge)
dge <- read.table(file = "FPKMresults_gene.tsv",
header = TRUE)
rsem_expectedCount_all_together_names.tsv
sample <- read_csv(file = "sample_info_tissues.csv", col_names = TRUE)
dge <- read.table(file = "rsem_expectedCount_all_together_names.tsv",
header = TRUE)
dge %<>% column_to_rownames("gene_id") %>%
as.matrix() %>%
edgeR::DGEList() %>%
calcNormFactors()
plot(hclust( d = dist(t(cpm(dge)),  method = "euclidean"),
method = "ward.D"),
hang = -1, xlab = "Samples", sub = "Distance=euclidean; Method=ward.D")
plotMDS( dge, top = 500,
labels = row.names(sample_info), main = "MDS plot", cex=0.8,
col = c( "red","blue")[ as.factor(sample_info$species) ])
plotMDS( dge, top = 500,
labels = row.names(sample_info), main = "MDS plot", cex=0.8,
col = c( "red","blue")[ as.factor(sample$species) ])
plotMDS( dge, top = 500,
labels = row.names(sample), main = "MDS plot", cex=0.8,
col = c( "red","blue")[ as.factor(sample$species) ])
clust <- plot(hclust( d = dist(t(cpm(dge)),  method = "euclidean"),
method = "ward.D"),
hang = -1, xlab = "Samples", sub = "Distance=euclidean; Method=ward.D")
rm(clust)
?plot
par(mar=c(5,5,3,2))
plotMDS(dge, main = "MDS plot", top = 500,
col = c( "red","blue")[ as.factor(sample$experiment) ],
pch = c(0,1,2)[ as.factor(sample$species) ] )
legend("topleft", title = "species | experiment", ncol=2,  cex=1,
legend = c(levels(as.factor(sample$species)), levels(as.factor(sample$experiment))),
pch = c(0, 1, NA, NA), text.col = c(rep("black", 2), c( "red", "blue")))
mds <- plotMDS(dge, top = 500)
plot <- mds@.Data[[3]] %>%
as.data.frame() %>%
rownames_to_column("group") %>%
set_colnames(c("group","x","y")) %>%
left_join(sample, by = c("group"="gene_id"))
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
names(dge)
read_counts_sample1 <- dge$counts[ ,"ALA_eye_count" ]
cpm_sample1 <- cpm(read_counts_sample1)
for(count in c(5:10)){
# find the CPM value of genes which have read counts between 5 and 10
unique_cpm_value <- unique( cpm_sample1[ which( read_counts_sample1 == count ), ] )
# print the CPM value rounded to 2 decimal places that corresponds to each count value between 5 and 10
print( paste( count, "reads => CPM", round( unique_cpm_value, 2) ) )
}
dge_expressed <- dge[ rowSums(cpm(dge) > 1) >= 4, ]
dim(dge_expressed$counts)
dge_expressed$samples$lib.size <- colSums(dge_expressed$counts)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.7)
dge_expressed <- calcNormFactors(dge_expressed, method="TMM")
dge_expressed$samples
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.7)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.1)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.3)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.4)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.8)
barplot(dge_expressed$samples$lib.size*1e-6, names=row.names( dge_expressed$samples ),
xlab="Samples", ylab="Library size (millions)", cex.names = 0.6)
Photo <- as.factor(sample$experiment)
Photo
design <- model.matrix(~ Photo)
design
dispersions <- estimateGLMCommonDisp(dge_expressed, design, verbose=TRUE)
dispersions <- estimateGLMTrendedDisp(dispersions, design)
dispersions <- estimateGLMTagwiseDisp(dispersions, design)
plotBCV(dispersions, main="BCV plot of skin samples")
plotBCV(dispersions, main="BCV plot of all samples")
plotBCV(dispersions, main="BCV plot")
fit <- glmFit(dispersions, design)
lrt <- glmLRT(fit, coef = "Photo")
PHOTORESPONSE
x <- dge
rpkm1 <- rpkm(x)
rm(x)
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$sample[,c(2,5)], launch=FALSE)
library(Glimma)
install.packages("Glimma")
library(Glimma)
mds <- plotMDS(dge, gene.selection = "pairwise")
plot <- mds@.Data[[3]] %>%
as.data.frame() %>%
rownames_to_column("group") %>%
set_colnames(c("group","x","y")) %>%
left_join(sample, by = c("group"="gene_id"))
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
mds <- plotMDS(dge, gene.selection = "common")
plot <- mds@.Data[[3]] %>%
as.data.frame() %>%
rownames_to_column("group") %>%
set_colnames(c("group","x","y")) %>%
left_join(sample, by = c("group"="gene_id"))
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
plot %>%
ggplot(aes(x, y, colour = seqYear, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
sample <- read_csv(file = "sample_info_tissues.csv", col_names = TRUE)
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
plot %>%
ggplot(aes(x, y, colour = seqYear, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
mds <- plotMDS(dge, gene.selection = "common")
plot <- mds@.Data[[3]] %>%
as.data.frame() %>%
rownames_to_column("group") %>%
set_colnames(c("group","x","y")) %>%
left_join(sample, by = c("group"="gene_id"))
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
plot %>%
ggplot(aes(x, y, colour = seqYear, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
mds <- plotMDS(dge, gene.selection = "common", method = "logFC")
plot <- mds@.Data[[3]] %>%
as.data.frame() %>%
rownames_to_column("group") %>%
set_colnames(c("group","x","y")) %>%
left_join(sample, by = c("group"="gene_id"))
plot %>%
ggplot(aes(x, y, colour = experiment, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
plot %>%
ggplot(aes(x, y, colour = seqYear, shape = species, label = tissue)) +
geom_point(size = 4) +
geom_text(hjust = 0, nudge_x = 0.2, check_overlap = TRUE) +
theme_bw(base_size = 16) +
theme(legend.text = element_text(size = 12)) +
labs(x = "Dimension 1",
y=  "Dimension 2")
rm(cpm\)
rm(cpm_sample1)
log2cpm_expressed <- cpm(dge_expressed, log=T)
heatmap.2(log2cpm_expressed, trace = "none", col= greenred(10))
heatmap(log2cpm_expressed, trace = "none", col= greenred(10))
heatmap(log2cpm_expressed, trace = "none", col= heat.colors(299))
sample <- read_csv(file = "sample_info_tissues.csv", col_names = TRUE)
geneList_vis <- c("gene9138", "gene1436",	"gene18158", "gene578","gene6185",
"gene9998",	"gene14855",	"gene6815",	"gene7347",	"gene838",	"gene734",
"gene10758",	"gene4551",	"gene14673",	"gene16342",	"gene2810",	"gene18158")
geneList_vis <- c("gene9138", "gene1436",	"gene18158", "gene578","gene6185",
"gene9998",	"gene14855",	"gene6815",	"gene7347",	"gene838",	"gene734",
"gene10758",	"gene4551",	"gene14673",	"gene16342",	"gene2810",	"gene18158")
geneList_vis
visGenessubset<- filter(dge_expressed, gene_id %in% geneList)
